package it.polito.ai.lhmf.orm;

// Generated 30-lug-2012 15.24.51 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Order generated by hbm2java
 */
@Entity
@Table(name = "order", uniqueConstraints = @UniqueConstraint(columnNames = "order_name"))
public class Order implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer idOrder;
	private Supplier supplier;
	private Member member;
	private String orderName;
	private Date dateOpen;
	private Date dateClose;
	private Date dateDelivery;
	private Set<Purchase> purchases = new HashSet<Purchase>(0);
	private Set<Message> messages = new HashSet<Message>(0);
	private Set<Product> products = new HashSet<Product>(0);

	public Order() {
	}

	public Order(Supplier supplier, Member member, String orderName,
			Date dateOpen, Date dateClose) {
		this.supplier = supplier;
		this.member = member;
		this.orderName = orderName;
		this.dateOpen = dateOpen;
		this.dateClose = dateClose;
	}

	public Order(Supplier supplier, Member member, String orderName,
			Date dateOpen, Date dateClose, Date dateDelivery, Set<Purchase> purchases,
			Set<Message> messages, Set<Product> products) {
		this.supplier = supplier;
		this.member = member;
		this.orderName = orderName;
		this.dateOpen = dateOpen;
		this.dateClose = dateClose;
		this.dateDelivery = dateDelivery;
		this.purchases = purchases;
		this.messages = messages;
		this.products = products;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idOrder", unique = true, nullable = false)
	public Integer getIdOrder() {
		return this.idOrder;
	}

	public void setIdOrder(Integer idOrder) {
		this.idOrder = idOrder;
	}

	/**
	 * Ritorna il fornitore dell'ordine
	 * @return
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idSupplier", nullable = false)
	public Supplier getSupplier() {
		return this.supplier;
	}

	public void setSupplier(Supplier supplier) {
		this.supplier = supplier;
	}

	/**
	 * Ritorna il responsabile dell'ordine
	 * @return
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idMember_resp", nullable = false)
	public Member getMember() {
		return this.member;
	}

	public void setMember(Member member) {
		this.member = member;
	}

	@Column(name = "order_name", unique = true, nullable = false, length = 100)
	public String getOrderName() {
		return this.orderName;
	}

	public void setOrderName(String orderName) {
		this.orderName = orderName;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "date_open", nullable = false, length = 10)
	public Date getDateOpen() {
		return this.dateOpen;
	}

	public void setDateOpen(Date dateOpen) {
		this.dateOpen = dateOpen;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "date_close", nullable = false, length = 10)
	public Date getDateClose() {
		return this.dateClose;
	}

	public void setDateClose(Date dateClose) {
		this.dateClose = dateClose;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "date_delivery", length = 10)
	public Date getDateDelivery() {
		return this.dateDelivery;
	}

	public void setDateDelivery(Date dateDelivery) {
		this.dateDelivery = dateDelivery;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "order")
	public Set<Purchase> getPurchases() {
		return this.purchases;
	}

	public void setPurchases(Set<Purchase> purchases) {
		this.purchases = purchases;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "order")
	public Set<Message> getMessages() {
		return this.messages;
	}

	public void setMessages(Set<Message> messages) {
		this.messages = messages;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "order_product", joinColumns = { @JoinColumn(name = "idOrder", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "idProduct", nullable = false, updatable = false) })
	public Set<Product> getProducts() {
		return this.products;
	}

	public void setProducts(Set<Product> products) {
		this.products = products;
	}

}
