<?xml version="1.0" encoding="UTF-8"?>

<!--
  - Sample namespace-based configuration
  -
  -->

<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    					http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2-1.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

    <debug />

    <global-method-security pre-post-annotations="enabled" />

    <http pattern="/css/**" security="none"/>
    <http pattern="/img/**" security="none"/>
    <http pattern="/js/**" security="none"/>
    
    <!-- OAUTH 2 for android clients -->
	<http pattern="/oauth/token" create-session="stateless" authentication-manager-ref="clientAuthenticationManager"
		entry-point-ref="oauthAuthenticationEntryPoint" xmlns="http://www.springframework.org/schema/security">
		<intercept-url pattern="/oauth/token" access="IS_AUTHENTICATED_FULLY" />
		<anonymous enabled="false" />
		<http-basic entry-point-ref="oauthAuthenticationEntryPoint" />
		<!-- include this only if you need to authenticate clients via request parameters -->
		<custom-filter ref="clientCredentialsTokenEndpointFilter" before="BASIC_AUTH_FILTER" />
		<access-denied-handler ref="oauthAccessDeniedHandler" />
	</http>
	
	<!-- The OAuth2 protected resources are separated out into their own block so we can deal with authorization and error handling 
		separately. This isn't mandatory, but it makes it easier to control the behaviour. -->
	<http pattern="/androidApi/**" create-session="never" entry-point-ref="oauthAuthenticationEntryPoint"
		access-decision-manager-ref="accessDecisionManager" xmlns="http://www.springframework.org/schema/security">
		<anonymous enabled="false" />
<!-- 		<intercept-url pattern="/photos" access="ROLE_USER,SCOPE_READ" /> -->
<!-- 		<intercept-url pattern="/photos/trusted/**" access="ROLE_CLIENT,SCOPE_TRUST" /> -->
<!-- 		<intercept-url pattern="/photos/user/**" access="ROLE_USER,SCOPE_TRUST" /> -->
<!-- 		<intercept-url pattern="/photos/**" access="ROLE_USER,SCOPE_READ" /> -->
		<custom-filter ref="resourceServerFilter" before="PRE_AUTH_FILTER" />
		<access-denied-handler ref="oauthAccessDeniedHandler" />
	</http>
	
	<http pattern="/android/**" use-expressions="true">
	    <intercept-url pattern="/android/login*" access="permitAll"/>
	    <intercept-url pattern="/android/success*" access="isAuthenticated()"/>
	     <intercept-url pattern="/android/j_spring_facebook_security_check*" access="permitAll"/>
	    <form-login login-page="/android/login" login-processing-url="/android/j_spring_security_check" default-target-url="/android/loginSuccess"
	        always-use-default-target="true" authentication-failure-url="/android/login?form_error"/>
	    <openid-login user-service-ref="myUserDetailsService" login-processing-url="/android/j_spring_openid_security_check" default-target-url="/android/loginSuccess"
	        always-use-default-target="true" authentication-failure-handler-ref="androidOpenIdSuccessButNotRegistered">
            <attribute-exchange>
                <openid-attribute name="firstname" type="http://axschema.org/namePerson/first" required="true"/>
                <openid-attribute name="lastname" type="http://axschema.org/namePerson/last" required="true"/>
                <openid-attribute name="email" type="http://axschema.org/contact/email" required="true"/>
                <openid-attribute name="address" type="http://axschema.org/contact/postaladdress/home" required="true"/>
                <openid-attribute name="city" type="http://axschema.org/contact/city/home" required="true"/>
                <openid-attribute name="state" type="http://axschema.org/contact/state/home" required="true"/>
                <openid-attribute name="country" type="http://axschema.org/contact/country/home" required="true"/>
                <openid-attribute name="cap" type="http://axschema.org/contact/postalcode/home" required="true"/>
                <openid-attribute name="phone" type="http://axschema.org/contact/phone/default" required="true"/>
                
                <openid-attribute name="firstname" type="http://schema.openid.net/namePerson/first" required="true"/>
                <openid-attribute name="lastname" type="http://schema.openid.net/namePerson/last" required="true"/>
                <openid-attribute name="email" type="http://schema.openid.net/contact/email" required="true"/>
                <openid-attribute name="address" type="http://schema.openid.net/contact/postaladdress/home" required="true"/>
                <openid-attribute name="city" type="http://schema.openid.net/contact/city/home" required="true"/>
                <openid-attribute name="state" type="http://schema.openid.net/contact/state/home" required="true"/>
                <openid-attribute name="country" type="http://schema.openid.net/contact/country/home" required="true"/>
                <openid-attribute name="cap" type="http://schema.openid.net/contact/postalcode/home" required="true"/>
                <openid-attribute name="phone" type="http://schema.openid.net/contact/phone/default" required="true"/>
                
                <openid-attribute name="firstname" type="http://openid.net/schema/namePerson/first" required="true"/>
                <openid-attribute name="lastname" type="http://openid.net/schema/namePerson/last" required="true"/>
                <openid-attribute name="email" type="http://openid.net/schema/contact/email" required="true"/>
                <openid-attribute name="address" type="http://openid.net/schema/contact/postaladdress/home" required="true"/>
                <openid-attribute name="city" type="http://openid.net/schema/contact/city/home" required="true"/>
                <openid-attribute name="state" type="http://openid.net/schema/contact/state/home" required="true"/>
                <openid-attribute name="country" type="http://openid.net/schema/contact/country/home" required="true"/>
                <openid-attribute name="cap" type="http://openid.net/schema/contact/postalcode/home" required="true"/>
                <openid-attribute name="phone" type="http://openid.net/schema/contact/phone/default" required="true"/>
            </attribute-exchange>
        </openid-login>
        <custom-filter ref="oauth2ClientFilter" after="EXCEPTION_TRANSLATION_FILTER" />
        <custom-filter before="FILTER_SECURITY_INTERCEPTOR " ref="androidFbAuthFilter"/>
	</http>
	
<!-- 	<http pattern="/mobile/**" use-expressions="true"> -->
<!-- 	    <intercept-url pattern="/mobile/login*" access="permitAll"/> -->
<!-- 	    <form-login login-page="/mobile/login" login-processing-url="/mobile/j_spring_security_check_mobile" authentication-success-handler-ref="loginSuccessfull" authentication-failure-url="/mobile/login?form_error"/> -->
<!-- 	</http> -->

	<!-- Normal security (not andorid clients OAuth) -->
	<http use-expressions="true">
	    <intercept-url pattern="/openid_signup*" access="permitAll"/>
	    <intercept-url pattern="/facebook_signup*" access="permitAll"/>
	    <intercept-url pattern="/normal_signup*" access="permitAll"/>
	    <intercept-url pattern="/signup*" access="permitAll"/>
	    <intercept-url pattern="/login*" access="permitAll"/>
	    <intercept-url pattern="/authMail*" access="permitAll"/>
	    <intercept-url pattern="/j_spring_facebook_security_check*" access="permitAll"/>
        <intercept-url pattern="/**" access="isAuthenticated()"/>
        <form-login login-page="/login" authentication-success-handler-ref="loginSuccessfull" authentication-failure-url="/login?form_error"/>
        <custom-filter ref="oauth2ClientFilter" after="EXCEPTION_TRANSLATION_FILTER" />
        <custom-filter before="FILTER_SECURITY_INTERCEPTOR " ref="fbAuthFilter"/>
        <openid-login user-service-ref="myUserDetailsService" authentication-success-handler-ref="loginSuccessfull" authentication-failure-handler-ref="openIdSuccessButNotRegistered">
            <attribute-exchange>
                <openid-attribute name="firstname" type="http://axschema.org/namePerson/first" required="true"/>
                <openid-attribute name="lastname" type="http://axschema.org/namePerson/last" required="true"/>
                <openid-attribute name="email" type="http://axschema.org/contact/email" required="true"/>
                <openid-attribute name="address" type="http://axschema.org/contact/postaladdress/home" required="true"/>
                <openid-attribute name="city" type="http://axschema.org/contact/city/home" required="true"/>
                <openid-attribute name="state" type="http://axschema.org/contact/state/home" required="true"/>
                <openid-attribute name="country" type="http://axschema.org/contact/country/home" required="true"/>
                <openid-attribute name="cap" type="http://axschema.org/contact/postalcode/home" required="true"/>
                <openid-attribute name="phone" type="http://axschema.org/contact/phone/default" required="true"/>
                
                <openid-attribute name="firstname" type="http://schema.openid.net/namePerson/first" required="true"/>
                <openid-attribute name="lastname" type="http://schema.openid.net/namePerson/last" required="true"/>
                <openid-attribute name="email" type="http://schema.openid.net/contact/email" required="true"/>
                <openid-attribute name="address" type="http://schema.openid.net/contact/postaladdress/home" required="true"/>
                <openid-attribute name="city" type="http://schema.openid.net/contact/city/home" required="true"/>
                <openid-attribute name="state" type="http://schema.openid.net/contact/state/home" required="true"/>
                <openid-attribute name="country" type="http://schema.openid.net/contact/country/home" required="true"/>
                <openid-attribute name="cap" type="http://schema.openid.net/contact/postalcode/home" required="true"/>
                <openid-attribute name="phone" type="http://schema.openid.net/contact/phone/default" required="true"/>
                
                <openid-attribute name="firstname" type="http://openid.net/schema/namePerson/first" required="true"/>
                <openid-attribute name="lastname" type="http://openid.net/schema/namePerson/last" required="true"/>
                <openid-attribute name="email" type="http://openid.net/schema/contact/email" required="true"/>
                <openid-attribute name="address" type="http://openid.net/schema/contact/postaladdress/home" required="true"/>
                <openid-attribute name="city" type="http://openid.net/schema/contact/city/home" required="true"/>
                <openid-attribute name="state" type="http://openid.net/schema/contact/state/home" required="true"/>
                <openid-attribute name="country" type="http://openid.net/schema/contact/country/home" required="true"/>
                <openid-attribute name="cap" type="http://openid.net/schema/contact/postalcode/home" required="true"/>
                <openid-attribute name="phone" type="http://openid.net/schema/contact/phone/default" required="true"/>
            </attribute-exchange>
        </openid-login>
        <logout logout-url="/logout" logout-success-url="/" delete-cookies="JSESSIONID" invalidate-session="true"/>
        <remember-me user-service-ref="myUserDetailsService" authentication-success-handler-ref="loginSuccessfull"/>

        <!-- Uncomment to limit the number of sessions a user can have -->
<!--         <session-management invalid-session-url="/timeout.jsp"> -->
<!--             <concurrency-control max-sessions="1" error-if-maximum-exceeded="true" /> -->
<!--         </session-management> -->
    </http>
    
	<beans:bean id="customAccessTokenProviderChain" class="org.springframework.security.oauth2.client.token.AccessTokenProviderChain">
	    <beans:constructor-arg>
	        <beans:list>
	            <beans:bean class="it.polito.ai.lhmf.security.FacebookAccessTokenProvider"/>
	            <beans:bean class="org.springframework.security.oauth2.client.token.grant.client.ClientCredentialsAccessTokenProvider"/>
	        </beans:list>  
	    </beans:constructor-arg>
	</beans:bean>
	
	<beans:bean id="oauth2ClientFilter" class="org.springframework.security.oauth2.client.filter.OAuth2ClientContextFilter">
	    <beans:property name="accessTokenProvider" ref="customAccessTokenProviderChain"/>
	    <beans:property name="redirectOnError" value="true"/>
	</beans:bean>
	
	<beans:bean id="facebookResourceDetailsService" class="it.polito.ai.lhmf.security.FacebookResourceDetailsService"/>
	<beans:bean id="androidFacebookResourceDetailsService" class="it.polito.ai.lhmf.security.FacebookResourceDetailsService">
	    <beans:constructor-arg value="true"/>
	</beans:bean>
	
	<beans:bean id="fbAuthFilter" class="it.polito.ai.lhmf.security.FacebookAuthenticationFilter">
		<beans:property name="authenticationManager" ref="authenticationManager"/>
		<beans:property name="protectedResourceDetailsService" ref="facebookResourceDetailsService"/>
		<beans:property name="authenticationSuccessHandler" ref="loginSuccessfull"/>
		<beans:property name="authenticationFailureHandler" ref="fbSuccessButNotRegistered"/>
		<beans:property name="sessionFactory" ref="sessionFactory"/>
	</beans:bean>
	
	<beans:bean id="androidFbAuthFilter" class="it.polito.ai.lhmf.security.FacebookAuthenticationFilter">
		<beans:property name="authenticationManager" ref="authenticationManager"/>
		<beans:property name="protectedResourceDetailsService" ref="androidFacebookResourceDetailsService"/>
		<beans:property name="filterProcessesUrl" value="/android/j_spring_facebook_security_check"/>
		<beans:property name="authenticationSuccessHandler">
		    <beans:bean class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler">
		        <beans:constructor-arg value="/android/loginSuccess"/>
		        <beans:property name="alwaysUseDefaultTargetUrl" value="true"/>
		    </beans:bean>
		</beans:property>
		<beans:property name="AuthenticationFailureHandler" ref="androidFbSuccessButNotRegistered"/>
		<beans:property name="sessionFactory" ref="sessionFactory"/>
	</beans:bean>
    
	<beans:bean id="loginSuccessfull" class="it.polito.ai.lhmf.security.LoginSuccessfullHandler">
	    <beans:property name="memberInterface" ref="memberDao"/>
	    <beans:property name="supplierInterface" ref="supplierDao"/>
	</beans:bean>
	
	<beans:bean id="openIdSuccessButNotRegistered" class="it.polito.ai.lhmf.security.OpenIdRegistrationRequiredHandler">
	    <beans:property name="defaultFailureUrl" value="/login?openid_error"/>
	</beans:bean>
	
	<beans:bean id="fbSuccessButNotRegistered" class="it.polito.ai.lhmf.security.FacebookRegistrationRequiredHandler">
	    <beans:property name="defaultFailureUrl" value="/login?fb_error"/>
	</beans:bean>
	
	<beans:bean id="androidOpenIdSuccessButNotRegistered" class="it.polito.ai.lhmf.security.OpenIdRegistrationRequiredHandler">
	    <beans:property name="defaultFailureUrl" value="/android/login?openid_error"/>
	</beans:bean>
	
	<beans:bean id="androidFbSuccessButNotRegistered" class="it.polito.ai.lhmf.security.FacebookRegistrationRequiredHandler">
	    <beans:property name="defaultFailureUrl" value="/android/login?fb_error"/>
	</beans:bean>
    
	<authentication-manager alias="authenticationManager">
	    <authentication-provider user-service-ref="myUserDetailsService">
	        <password-encoder hash="md5"/>
	    </authentication-provider>
	</authentication-manager>
	
	<beans:bean id="myUserDetailsService" class="it.polito.ai.lhmf.security.MyUserDetailsService">
	    <beans:property name="sessionFactory" ref="sessionFactory"/>
	</beans:bean>
	
	<!-- OAUTH 2 for android clients -->
	<beans:bean id="oauthAuthenticationEntryPoint" class="org.springframework.security.oauth2.provider.error.MediaTypeAwareAuthenticationEntryPoint">
		<beans:property name="realmName" value="gas" />
	</beans:bean>
	
	<beans:bean id="oauthAccessDeniedHandler" class="org.springframework.security.oauth2.provider.error.MediaTypeAwareAccessDeniedHandler" />
	
	<beans:bean id="clientCredentialsTokenEndpointFilter" class="org.springframework.security.oauth2.provider.filter.ClientCredentialsTokenEndpointFilter">
		<beans:property name="authenticationManager" ref="clientAuthenticationManager" />
	</beans:bean>
	
	<beans:bean id="accessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased">
		<beans:constructor-arg>
			<beans:list>
				<beans:bean class="org.springframework.security.oauth2.provider.vote.ScopeVoter" />
				<beans:bean class="org.springframework.security.access.vote.RoleVoter" />
				<beans:bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
			</beans:list>
		</beans:constructor-arg>
	</beans:bean>
	
	<authentication-manager id="clientAuthenticationManager">
		<authentication-provider user-service-ref="clientDetailsUserService" />
	</authentication-manager>
	
	<beans:bean id="clientDetailsUserService" class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
		<beans:constructor-arg ref="clientDetails" />
	</beans:bean>
	
	<beans:bean id="tokenStore" class="org.springframework.security.oauth2.provider.token.InMemoryTokenStore" />

	<beans:bean id="tokenServices" class="org.springframework.security.oauth2.provider.token.RandomValueTokenServices">
	    <beans:property name="accessTokenValiditySeconds" value="0"/>
		<beans:property name="tokenStore" ref="tokenStore" />
		<beans:property name="supportRefreshToken" value="true" />
	</beans:bean>
	
	<beans:bean id="userApprovalHandler" class="it.polito.ai.lhmf.security.oauth.AndroidClientApprovalHandler">
		<beans:property name="autoApproveClient" value="androidGas"/>
		<beans:property name="tokenServices" ref="tokenServices" />
	</beans:bean>
	
	
	
	<oauth:resource-server id="resourceServerFilter" resource-id="androidGasApi" token-services-ref="tokenServices"/>
	
	<oauth:client-details-service id="clientDetails">
	    <oauth:client client-id="androidGas" authorized-grant-types="password,authorization_code,refresh_token,implicit" resource-ids="androidGasApi"/>
	</oauth:client-details-service>

</beans:beans>
